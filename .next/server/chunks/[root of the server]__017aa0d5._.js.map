{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 102, "column": 0}, "map": {"version":3,"sources":["file://E%3A/coding%20things/developers/personal%20finance%20visualizer/p-f-v/lib/db.ts"],"sourcesContent":["import mongoose, { Connection } from \"mongoose\";\r\nimport dotenv from \"dotenv\";\r\ndotenv.config({ path: \".env.local\" }); \r\n\r\nconst MONGODB_URL = process.env.MONGO_URI as string;\r\n\r\nif (!MONGODB_URL) {\r\n  throw new Error(\"MongoDB URI not found!\");\r\n}\r\n\r\n// Fix: Properly define global cache using globalThis\r\ndeclare global {\r\n  var mongoose: { conn: Connection | null; promise: Promise<Connection> | null };\r\n}\r\n\r\nglobalThis.mongoose = globalThis.mongoose || { conn: null, promise: null };\r\n\r\nasync function connect() {\r\n  if (globalThis.mongoose.conn) {\r\n    return globalThis.mongoose.conn;\r\n  }\r\n\r\n  if (!globalThis.mongoose.promise) {\r\n    globalThis.mongoose.promise = mongoose\r\n      .connect(MONGODB_URL, {\r\n        dbName: \"PFV\", // Ensure a database name is provided\r\n        bufferCommands: false,\r\n      })\r\n      .then((mongoose) => mongoose.connection);\r\n  }\r\n\r\n  globalThis.mongoose.conn = await globalThis.mongoose.promise;\r\n  return globalThis.mongoose.conn;\r\n}\r\nexport default connect;\r\n"],"names":[],"mappings":";;;AAAA;AACA;;;AACA,uIAAA,CAAA,UAAM,CAAC,MAAM,CAAC;IAAE,MAAM;AAAa;AAEnC,MAAM,cAAc,QAAQ,GAAG,CAAC,SAAS;AAEzC,IAAI,CAAC,aAAa;IAChB,MAAM,IAAI,MAAM;AAClB;AAOA,WAAW,QAAQ,GAAG,WAAW,QAAQ,IAAI;IAAE,MAAM;IAAM,SAAS;AAAK;AAEzE,eAAe;IACb,IAAI,WAAW,QAAQ,CAAC,IAAI,EAAE;QAC5B,OAAO,WAAW,QAAQ,CAAC,IAAI;IACjC;IAEA,IAAI,CAAC,WAAW,QAAQ,CAAC,OAAO,EAAE;QAChC,WAAW,QAAQ,CAAC,OAAO,GAAG,yGAAA,CAAA,UAAQ,CACnC,OAAO,CAAC,aAAa;YACpB,QAAQ;YACR,gBAAgB;QAClB,GACC,IAAI,CAAC,CAAC,WAAa,SAAS,UAAU;IAC3C;IAEA,WAAW,QAAQ,CAAC,IAAI,GAAG,MAAM,WAAW,QAAQ,CAAC,OAAO;IAC5D,OAAO,WAAW,QAAQ,CAAC,IAAI;AACjC;uCACe","debugId":null}},
    {"offset": {"line": 140, "column": 0}, "map": {"version":3,"sources":["file://E%3A/coding%20things/developers/personal%20finance%20visualizer/p-f-v/models/Budget.ts"],"sourcesContent":["import mongoose from \"mongoose\";\r\n\r\n// Define the Budget type\r\nexport interface Budget {\r\n  _id: string;\r\n  category: string;\r\n  amount: number;\r\n  month: number;\r\n  year: number;\r\n}\r\n\r\n// Define the Mongoose schema\r\nconst budgetSchema = new mongoose.Schema({\r\n  category: { type: String, required: true, enum: [\"Food\", \"Transportation\", \"Entertainment\", \"Utilities\", \"Shopping\", \"Bills\"] },\r\n  amount: { type: Number, required: true, min: 0 },\r\n  month: { type: Number, required: true, min: 1, max: 12 },\r\n  year: { type: Number, required: true },\r\n});\r\n\r\n// Create the Mongoose model\r\nconst BudgetModel = mongoose.models.Budget || mongoose.model<Budget>(\"Budget\", budgetSchema);\r\n\r\nexport default BudgetModel;"],"names":[],"mappings":";;;AAAA;;AAWA,6BAA6B;AAC7B,MAAM,eAAe,IAAI,yGAAA,CAAA,UAAQ,CAAC,MAAM,CAAC;IACvC,UAAU;QAAE,MAAM;QAAQ,UAAU;QAAM,MAAM;YAAC;YAAQ;YAAkB;YAAiB;YAAa;YAAY;SAAQ;IAAC;IAC9H,QAAQ;QAAE,MAAM;QAAQ,UAAU;QAAM,KAAK;IAAE;IAC/C,OAAO;QAAE,MAAM;QAAQ,UAAU;QAAM,KAAK;QAAG,KAAK;IAAG;IACvD,MAAM;QAAE,MAAM;QAAQ,UAAU;IAAK;AACvC;AAEA,4BAA4B;AAC5B,MAAM,cAAc,yGAAA,CAAA,UAAQ,CAAC,MAAM,CAAC,MAAM,IAAI,yGAAA,CAAA,UAAQ,CAAC,KAAK,CAAS,UAAU;uCAEhE","debugId":null}},
    {"offset": {"line": 184, "column": 0}, "map": {"version":3,"sources":["file://E%3A/coding%20things/developers/personal%20finance%20visualizer/p-f-v/app/api/budgets/route.ts"],"sourcesContent":["import { NextResponse } from \"next/server\";\r\nimport connect from \"@/lib/db\";\r\nimport BudgetModel from \"@/models/Budget\";\r\n\r\n// GET: Fetch all budgets\r\nexport async function GET() {\r\n  await connect();\r\n  try {\r\n    const budgets = await BudgetModel.find();\r\n    return NextResponse.json({ success: true, data: budgets }, { status: 200 });\r\n  } catch (error) {\r\n    return NextResponse.json(\r\n      { error: \"Failed to fetch budgets\" },\r\n      { status: 500 }\r\n    );\r\n  }\r\n}\r\n\r\n// POST: Create a new budget\r\nexport async function POST(request: Request) {\r\n  await connect();\r\n  try {\r\n    const body = await request.json();\r\n    const budget = new BudgetModel(body);\r\n    if (!body.amount || !body.category) {\r\n      return NextResponse.json({ success: false, error: \"Missing required fields\" }, { status: 400 });\r\n    }\r\n    \r\n    await budget.save();\r\n    return NextResponse.json({ success: true, data: budget }, { status: 201 });\r\n  } catch (error) {\r\n      console.error(\"POST /budgets error:\", error);\r\n      return NextResponse.json({ success: false, error: \"Failed to save budget\" }, { status: 500 });\r\n  }\r\n}\r\n\r\n// PUT: Update a budget\r\nexport async function PUT(request: Request) {\r\n  await connect();\r\n  try {\r\n    const { _id, ...updateData } = await request.json();\r\n    const updatedBudget = await BudgetModel.findByIdAndUpdate(_id, updateData, {\r\n      new: true,\r\n    });\r\n    return NextResponse.json(updatedBudget);\r\n  } catch (error) {\r\n    return NextResponse.json(\r\n      { error: \"Failed to update budget\" },\r\n      { status: 500 }\r\n    );\r\n  }\r\n}\r\n\r\n// DELETE: Delete a budget\r\nexport async function DELETE(request: Request) {\r\n  await connect();\r\n  try {\r\n\r\n    const { _id } = await request.json();\r\n    if (!_id) {\r\n      return NextResponse.json(\r\n        { error: \"Missing budget ID\" },\r\n        { status: 400 }\r\n      );\r\n    }\r\n\r\n    const deletedBudget =  await BudgetModel.findByIdAndDelete(_id);\r\n\r\n    if (!deletedBudget) {\r\n      return NextResponse.json({ error: \"Budget not found\" },{ status: 404 });\r\n    }\r\n\r\n    return NextResponse.json({ message: \"Budget deleted successfully\" });\r\n  } catch (error) {\r\n    return NextResponse.json(\r\n      { error: \"Failed to delete budget\" },\r\n      { status: 500 }\r\n    );\r\n  }\r\n}"],"names":[],"mappings":";;;;;;AAAA;AACA;AACA;;;;AAGO,eAAe;IACpB,MAAM,CAAA,GAAA,2GAAA,CAAA,UAAO,AAAD;IACZ,IAAI;QACF,MAAM,UAAU,MAAM,kHAAA,CAAA,UAAW,CAAC,IAAI;QACtC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,SAAS;YAAM,MAAM;QAAQ,GAAG;YAAE,QAAQ;QAAI;IAC3E,EAAE,OAAO,OAAO;QACd,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YAAE,OAAO;QAA0B,GACnC;YAAE,QAAQ;QAAI;IAElB;AACF;AAGO,eAAe,KAAK,OAAgB;IACzC,MAAM,CAAA,GAAA,2GAAA,CAAA,UAAO,AAAD;IACZ,IAAI;QACF,MAAM,OAAO,MAAM,QAAQ,IAAI;QAC/B,MAAM,SAAS,IAAI,kHAAA,CAAA,UAAW,CAAC;QAC/B,IAAI,CAAC,KAAK,MAAM,IAAI,CAAC,KAAK,QAAQ,EAAE;YAClC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBAAE,SAAS;gBAAO,OAAO;YAA0B,GAAG;gBAAE,QAAQ;YAAI;QAC/F;QAEA,MAAM,OAAO,IAAI;QACjB,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,SAAS;YAAM,MAAM;QAAO,GAAG;YAAE,QAAQ;QAAI;IAC1E,EAAE,OAAO,OAAO;QACZ,QAAQ,KAAK,CAAC,wBAAwB;QACtC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,SAAS;YAAO,OAAO;QAAwB,GAAG;YAAE,QAAQ;QAAI;IAC/F;AACF;AAGO,eAAe,IAAI,OAAgB;IACxC,MAAM,CAAA,GAAA,2GAAA,CAAA,UAAO,AAAD;IACZ,IAAI;QACF,MAAM,EAAE,GAAG,EAAE,GAAG,YAAY,GAAG,MAAM,QAAQ,IAAI;QACjD,MAAM,gBAAgB,MAAM,kHAAA,CAAA,UAAW,CAAC,iBAAiB,CAAC,KAAK,YAAY;YACzE,KAAK;QACP;QACA,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;IAC3B,EAAE,OAAO,OAAO;QACd,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YAAE,OAAO;QAA0B,GACnC;YAAE,QAAQ;QAAI;IAElB;AACF;AAGO,eAAe,OAAO,OAAgB;IAC3C,MAAM,CAAA,GAAA,2GAAA,CAAA,UAAO,AAAD;IACZ,IAAI;QAEF,MAAM,EAAE,GAAG,EAAE,GAAG,MAAM,QAAQ,IAAI;QAClC,IAAI,CAAC,KAAK;YACR,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;gBAAE,OAAO;YAAoB,GAC7B;gBAAE,QAAQ;YAAI;QAElB;QAEA,MAAM,gBAAiB,MAAM,kHAAA,CAAA,UAAW,CAAC,iBAAiB,CAAC;QAE3D,IAAI,CAAC,eAAe;YAClB,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBAAE,OAAO;YAAmB,GAAE;gBAAE,QAAQ;YAAI;QACvE;QAEA,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,SAAS;QAA8B;IACpE,EAAE,OAAO,OAAO;QACd,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YAAE,OAAO;QAA0B,GACnC;YAAE,QAAQ;QAAI;IAElB;AACF","debugId":null}}]
}